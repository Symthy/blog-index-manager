{
  "Architecture": {
    "MicroArchit": {
      "20220511190352": "マイクロサービスアーキテクチャ メモ",
      "20221219134936": "【マイクロサービス】可観測性と OpenTelemetry (基本のみ)"
    }
  },
  "Program": {
    "Golang": {
      "20220123193352": "Golang Generics",
      "20220301235231": "Golang コード自動生成",
      "20220306134409": "Golang Gorm 実践メモ＆注意点",
      "20220403212749": "Golang ポインタ",
      "20220522014138": "Golang 並列処理（Gorutine/Channel/WaitGroup/ErrorGroup）",
      "20220525232601": "gRPC (by golang)",
      "20220630133012": "Golang ビルド制約使用時の golps に関する注意事項",
      "20220701083530": "go-ini では セミコロンが省略される",
      "20220704230622": "golang で windows サービス 開発 (kardianos/service の 実装説明少々)",
      "20220817213232": "golang AST & Jennifer によるコード自動生成",
      "20220821194621": "Golang：API 実行 と httptest"
    },
    "JavaScript": {
      "20220123193618": "JavaScript 基本",
      "20220403155620": "JS 高階関数"
    },
    "Java": {
      "20220129233432": "Java Assertj + Mockito",
      "20220201211144": "Gson Serialize (Object -> String) での時刻フォーマット指定方法",
      "20221115002425": "Java - HttpClient への SSL 実装での javax.net.ssl プロパティについて (+Quarkus 少々)"
    },
    "Python": {
      "20220331225306": "Python 色々メモ"
    },
    "Shell": {
      "20220411183102": "一定量メモリを消費させるshell",
      "20220523174937": "shell 1行目のおまじない shebang（シバン）"
    },
    "-": {
      "20220203094925": "コードレビュー どう取り組むか"
    }
  },
  "Algorithm": {},
  "Development": {
    "DDD": {
      "20220220230658": "DDD 実践メモ"
    },
    "GraphQL": {
      "20220506230412": "GraphQLについてまとめる"
    },
    "gRPC": {
      "20230326010228": "gRPC：buf とは、buf でできること"
    }
  },
  "BackEnd": {
    "ElasticStack": {
      "20220228213158": "Elasticsearch メモ"
    }
  },
  "FrontEnd": {
    "React": {
      "20220223232831": "React 基本概念等",
      "20220327001116": "React スタイリング メモ",
      "20220409232955": "React ステート管理 (TypeScript コード例)",
      "20220412132552": "React 副作用/メモ化/レデューサー (TypeScriptコード例付)",
      "20220514015741": "React Hooks",
      "20220528180852": "React コードフォーマット（ESLint + Prettier + TypeScript）",
      "20220529214905": "React Drag & Drop メモ",
      "20220710161317": "Redux 基本",
      "20220724175816": "React 実践のために調べまくったこと書き綴り まとめメモ",
      "20230211223658": "urql による Github ＆ Gitlab の マルチクライアント 実現（サンプル）"
    },
    "-": {
      "20220327195235": "フロントエンド 技術要素概要集",
      "20220710154411": "storybook チュートリアル ＆ CDD（コンポーネント駆動開発）",
      "20221119152008": "フロントエンド E2E テスト + MSW (Playwright/Cypress 試行) メモ"
    }
  },
  "Infra": {
    "Docker": {
      "20220514015712": "Docker メモ"
    },
    "-": {
      "20220514005630": "RPM Tips Stack"
    }
  },
  "Web": {},
  "Git": {
    "Github": {
      "20220818232858": "Github プロフィールのカスタマイズ"
    },
    "-": {
      "20220123193918": "Git 追跡解除",
      "20220514005712": "Git Tips Link Stack"
    }
  },
  "VSCode": {
    "-": {
      "20220129110728": "Markdown format",
      "20220514015847": "VSCode Markdown"
    }
  },
  "Tools": {},
  "Roadmap": {
    "-": {
      "20220514015907": "Front End Road Map"
    }
  },
  "Management": {},
  "StudyMeeting": {
    "-": {
      "20230224162653": "データ指向アプリケーションデザイン 勉強会メモ",
      "20230305164801": "分岐を低減する interface 設計 勉強会メモ"
    }
  },
  "Job": {
    "-": {
      "20220611215213": "Job: Golang で ログローテートと設定ファイル読み込み改修 取捨選択＆実装",
      "20220619215502": "PlantUML ガントチャート を活用してスクラムでのプチ進捗管理を行い見える化を進めたい"
    }
  },
  "Career": {},
  "Portfolio": {
    "-": {
      "20220123190520": "個人用ドキュメント＆ブログ管理ツール(ガチめ)作成記",
      "20220924160245": "【gRPC】Connect が作られた背景概要／これまでの gRPC-Web／Connect でできること",
      "20221108001800": "某社フロントエンドコーディング試験を題材とした React 学習記（作成時の考慮事項まとめ）",
      "20221127225942": "Poke Battle Integration App 再設計＆今後の方針",
      "20221231161635": "Git Review Comment Acumulator 企画/設計"
    }
  },
  "Others": {
    "Refactor": {
      "20220521005909": "Refactor Diary 1 (Java: APIレスポンス解析)"
    },
    "振り返り": {
      "20221230224920": "2022 振り返り"
    },
    "-": {
      "20220307005532": "エンジニアを分類する3タイプから考える自身のタイプとその先と",
      "20220514001912": "はてなブログ投稿自動化 メモ",
      "20220526003816": "OpenID Connect 概要まとめ (In progress)"
    }
  }
}